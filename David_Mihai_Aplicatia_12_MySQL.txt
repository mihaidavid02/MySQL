TRANZACTII IN MYSQL
---------------------------------------------------------------------------
1)  Calculati fara mysql  rezultatul final al urmatoarelor interogari apoi verificati raspunsul.
   set autocommit=1; 
   update carti set pret=1 where id_carte='1234';
   set autocommit=0;
    update carti set pret=2 where id_carte='1234';
   commit;     
   select pret from carti where id_carte='1234';

# Rezolvare
## Autocommit=1
Se seteaza valoare autocommit-ului astfel incat orice instructiune sa aiba efecte permanente:
	- la cartea cu id 1234 o sa se modifice permanent pretul la 1.

## Autocommit=0
Se seteaza valoare autocommit-ului astfel incat orice instructiune sa aiba rezultatul stocat temporar pana la instructiunea 'commit':
	- la cartea cu id 1234 o sa se modifice temporar pretul la 2.

## Commit
Toate instructiunile de dupa 'set autocommit=0;' vor fi executate cu efecte permanente:
	- la cartea cu id 1234 o sa ramana permanent pretul de 2.

## Concluzie
Comanda select va afisa pretul de 2 pentru cartea cu id-ul 1234.


2)  Calculati fara mysql  rezultatul final al urmatoarelor interogari apoi verificati raspunsul.
   set autocommit=1; 
    update carti set pret=1 where id_carte='1234';
   set autocommit=0;
   update carti set pret=2 where id_carte='1234';
   rollback;     
   select pret from carti where id_carte='1234';

# Rezolvare
## Autocommit=1
Se seteaza valoare autocommit-ului astfel incat orice instructiune sa aiba efecte permanente:
	- la cartea cu id 1234 o sa se modifice permanent pretul la 1.

## Autocommit=0
Se seteaza valoare autocommit-ului astfel incat orice instructiune sa aiba rezultatul stocat temporar pana la instructiunea 'commit':
	- la cartea cu id 1234 o sa se modifice temporar pretul la 2.

## Rollback
Se revine la starea de dinainte de a executa 'set autocommit=0;':
	- la cartea cu id 1234 o sa se revina la pretul de 1.

## Concluzie
Comanda select va afisa pretul de 1 pentru cartea cu id-ul 1234.


3)  Calculati fara mysql  rezultatul final al urmatoarelor interogari apoi verificati raspunsul.
   set autocommit=1; 
    update carti set pret=1 where id_carte='1234';
   set autocommit=0;
   update carti set pret=2 where id_carte='1234';
   update carti set pret=3 where id_carte='1234';
   rollback;     
   select pret from carti where id_carte='1234';

# Rezolvare
## Autocommit=1
Se seteaza valoare autocommit-ului astfel incat orice instructiune sa aiba efecte permanente:
	- la cartea cu id 1234 o sa se modifice permanent pretul la 1.

## Autocommit=0
Se seteaza valoare autocommit-ului astfel incat orice instructiune sa aiba rezultatul stocat temporar pana la instructiunea 'commit':
	- la cartea cu id 1234 o sa se modifice temporar pretul la 2;
	- la cartea cu id 1234 o sa se modifice temporar pretul la 3.

## Rollback
Se revine la starea de dinainte de a executa 'set autocommit=0;':
	- la cartea cu id 1234 o sa se revina la pretul de 1.

## Concluzie
Comanda select va afisa pretul de 1 pentru cartea cu id-ul 1234.


4) set autocommit=1; 
    update carti set pret=1 where id_carte='1234';
   set autocommit=0;
    update carti set pret=3 where id_carte='1234';
   select pret from carti where id_carte='1234';

# Rezolvare
## Autocommit=1
Se seteaza valoare autocommit-ului astfel incat orice instructiune sa aiba efecte permanente:
	- la cartea cu id 1234 o sa se modifice permanent pretul la 1.

## Autocommit=0
Se seteaza valoare autocommit-ului astfel incat orice instructiune sa aiba rezultatul stocat temporar pana la instructiunea 'commit':
	- la cartea cu id 1234 o sa se modifice temporar pretul la 3.

## Concluzie
Comanda select va afisa pretul de 3 pentru cartea cu id-ul 1234, DAR doar pentru noi. 
Daca alti utilizatori ar aceesa pretul acestei carti ar vedea pretul de 1.


5) set autocommit=1;
   start transaction;
    update carti set pret=1 where id_carte='1234';
    commit;
     update carti set pret=3 where id_carte='1234';
    rollback;
    select pret from carti where id_carte='1234';

# Rezolvare
## Autocommit=1
Se seteaza valoare autocommit-ului astfel incat orice instructiune sa aiba efecte permanente.

## Start transaction
Orice instructiune rulata va fi stocata temporar pana la executarea lui 'commit' sau 'rollback':
	- la cartea cu id 1234 o sa se modifice temporar pretul la 1;

## Commit
Toate instructiunile de dupa 'start transaction;' vor fi executate cu efecte permanente:
	- la cartea cu id 1234 o sa ramana permanent pretul de 1.

* modul autocommit va reveni la 1 (efecte permanente)
	- la cartea cu id 1234 o sa ramana permanent pretul de 3.

## Rollback
Se revine la starea de dinainte de a executa 'set autocommit=0;':
	- deoarece nu mai sunt instructiune facute in modul autocommit=0, atunci nu o sa existe instructiuni de anulat sau rezultate stocate temporar de sters.

## Concluzie
Comanda select va afisa pretul de 3 pentru cartea cu id-ul 1234.


6)  set autocommit=1; 
    update carti set pret=1 where id_carte='1234';
    start transaction;
     update carti set pret=2 where id_carte='1234';
    rollback;
   update carti set pret=3 where id_carte='1234';
    rollback;
     select pret from carti where id_carte='1234';

# Rezolvare
## Autocommit=1
Se seteaza valoare autocommit-ului astfel incat orice instructiune sa aiba efecte permanente:
	- la cartea cu id 1234 o sa se modifice permanent pretul la 1;

## Start transaction
Orice instructiune rulata va fi stocata temporar pana la executarea lui 'commit' sau 'rollback':
	- la cartea cu id 1234 o sa se modifice temporar pretul la 2;

## Rollback
Se revine la starea de dinainte de a executa 'start transaction;':
	- la cartea cu id 1234 o sa se revina la pretul de 1;

* modul autocommit va reveni la 1 (efecte permanente)
	- la cartea cu id 1234 o sa ramana permanent pretul de 3.

## Rollback
Se revine la starea de dinainte de a executa 'set autocommit=0;':
	- deoarece nu mai sunt instructiune facute in modul autocommit=0, atunci nu o sa existe instructiuni de anulat sau rezultate stocate temporar de sters.

## Concluzie
Comanda select va afisa pretul de 3 pentru cartea cu id-ul 1234.



SISTEMUL DE PRIVILEGII MYSQL
-------------------------------------------------------------
1) creati un utilizator cu numele dvs de familie care se va loga de la ip-ul
localhost

create user 'donisan'@'localhost' identified by 'password';
flush privileges;

2) iesiti si conectati-va in contul nou creat.

exit
mysql -u donisan -p password;

3) iesiti, apoi din postura de admin schimbati parola userului creat, apoi iesiti si va conectati iar pe contul acelui user cu noua parola.

exit
set password for 'donisan'@'localhost'='P@ssw0rd';
flush privileges;

4) dati dreptul de
 select,  update, alter, create, delete, drop in baza libraria (baza care stocheaza tabelele clienti, carti, comenzi, carti_comandate).

grant select,update,alter,create,delete,drop on l7.* to 'donisan'@'localhost';
flush privileges;

5) vizualizati drepturile acestui utilizator

show grants for 'donisan'@'localhost';

6) iesiti din cont, conectati-va pe contul utilizatorului nou creat, verificati ca el nu poate insera in baza.

exit
mysql -u donisan -p P@ssw0rd;
insert into carti values (1240,'BIOLOGIE','DAN',7);

7) ca admin, visualizati toti utilizatorii din sistemul dvs pentru a vedea si utilizatorul nou creat

use mysql;
describe user;
select host,user from user;

8) retrageti toate privilegiile acordate utilizatorului nou creat, verificati ca nu mai are drepturi conectandu-va pe contul lui.

revoke all on l7.* from 'donisan'@'localhost';
flush privileges;

9) stergeti utilizatorul nou creat.

drop user 'donisan'@'localhost';